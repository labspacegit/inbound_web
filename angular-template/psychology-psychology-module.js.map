{"version":3,"sources":["webpack:///./src/app/psychology/psychology-home/psychology-home.component.css","webpack:///./src/app/psychology/psychology-home/psychology-home.component.html","webpack:///./src/app/psychology/psychology-home/psychology-home.component.ts","webpack:///./src/app/psychology/psychology-list/psychology-list.component.html","webpack:///./src/app/psychology/psychology-list/psychology-list.component.scss","webpack:///./src/app/psychology/psychology-list/psychology-list.component.ts","webpack:///./src/app/psychology/psychology-result/psychology-result.component.css","webpack:///./src/app/psychology/psychology-result/psychology-result.component.html","webpack:///./src/app/psychology/psychology-result/psychology-result.component.ts","webpack:///./src/app/psychology/psychology-routing.module.ts","webpack:///./src/app/psychology/psychology.module.ts","webpack:///./src/app/psychology/questionnaire/questionnaire.component.css","webpack:///./src/app/psychology/questionnaire/questionnaire.component.html","webpack:///./src/app/psychology/questionnaire/questionnaire.component.ts","webpack:///./src/app/validator/custom.service.ts"],"names":[],"mappings":"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","file":"psychology-psychology-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<nav>\\n\\t<app-category (childEvent)=\\\"getCategoryId($event)\\\"></app-category>\\n</nav>\\n\\n<section>\\n\\t<app-banner [inputType]=\\\"'psychological-test'\\\"></app-banner>\\n</section>\\n\\n<section class=\\\"theme-test\\\">\\n\\t<div class=\\\"section-heading\\\">\\n\\t\\t<p>{{ this.layoutService.page_summary }}</p>\\n\\t</div>\\n\\n\\t<div class=\\\"section-contents\\\">\\n\\t\\t<div class=\\\"container\\\">\\n\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t\\t\\t<nav class=\\\"nav nav-sort\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"psychology_param.sort=='join_count'\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf=\\\"psychology_param.sort_order=='asc'\\\" (click)=\\\"sort('join_count','desc')\\\" class=\\\"nav-link active icon-desc\\\">測驗人數</a>\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf=\\\"psychology_param.sort_order=='desc'\\\" (click)=\\\"sort('join_count','asc')\\\" class=\\\"nav-link active icon-asc\\\">測驗人數</a>\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"sort('post_date','desc')\\\" class=\\\"nav-link icon-sort\\\">上架時間</a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"psychology_param.sort=='post_date'\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"sort('join_count','desc')\\\" class=\\\"nav-link icon-sort\\\">測驗人數</a>\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf=\\\"psychology_param.sort_order=='asc'\\\" (click)=\\\"sort('post_date','desc')\\\" class=\\\"nav-link active icon-desc\\\">上架時間</a>\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf=\\\"psychology_param.sort_order=='desc'\\\" (click)=\\\"sort('post_date','asc')\\\" class=\\\"nav-link active icon-asc\\\">上架時間</a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<!-- <a (click)=\\\"sort('join_count','desc')\\\" class=\\\"nav-link\\\">測驗人數<i class=\\\"icon-desc\\\" data-icon=\\\"\\\"></i></a>\\n\\t\\t\\t\\t\\t\\t<a (click)=\\\"sort('join_count','asc')\\\" class=\\\"nav-link\\\">測驗人數<i class=\\\"icon-asc\\\" data-icon=\\\"\\\"></i></a>\\n\\t\\t\\t\\t\\t\\t<a (click)=\\\"sort('post_date','desc')\\\" class=\\\"nav-link active\\\">上架時間<i class=\\\"icon-desc\\\" data-icon=\\\"\\\"></i></a>\\n\\t\\t\\t\\t\\t\\t<a (click)=\\\"sort('post_date','asc')\\\" class=\\\"nav-link\\\">上架時間<i class=\\\"icon-asc\\\" data-icon=\\\"\\\"></i></a> -->\\n\\t\\t\\t\\t\\t</nav>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t\\t\\t<app-psychology-list [psychology_param]=\\\"psychology_param\\\"></app-psychology-list>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { LayoutService } from \"../../services/layout.service\";\n\n@Component({\n\tselector: 'app-psychology-home',\n\ttemplateUrl: './psychology-home.component.html',\n\tstyleUrls: ['./psychology-home.component.css']\n})\nexport class PsychologyHomeComponent implements OnInit {\n\n\tpsychology_param = {\n\t\t\tcategory_id: 0,\n\t\t\tsort: 'post_date',\n\t\t\tsort_order: 'desc',\n\t\t\tfrom: 0,\n\t\t};\n\tcategory_id = 0;\n\n\tconstructor(public layoutService:LayoutService) { }\n\n\tngOnInit() {\n\t\tthis.layoutService.getSummary('page_test_introduction');\n\t}\n\n\n\t//sort\n\tsort($type,$order){\n\t\tthis.psychology_param = {\n\t\t\tcategory_id: this.category_id,\n\t\t\tsort: $type,\n\t\t\tsort_order: $order,\n\t\t\tfrom: 0,\n\t\t};\n\t}\n\n\n\t//category component output\n\tgetCategoryId($id){\n\t\tthis.category_id = $id;\n\t\tthis.psychology_param = {\n\t\t\tcategory_id: $id,\n\t\t\tsort: 'post_date',\n\t\t\tsort_order: 'desc',\n\t\t\tfrom: 0,\n\t\t};\n\t\t//location.reload();\n\t}\n\n}\n\n\n","module.exports = \"<div *ngIf=\\\"list\\\" class=\\\"row\\\">\\n\\t<div *ngFor=\\\"let test of list\\\" class=\\\"col-md-6 col-xl-4\\\">\\n    <div class=\\\"card card-overlay\\\">\\n      <div class=\\\"card-img-bg\\\" [ngStyle]=\\\"{'background-image':'url(' + fileUrl + test.image + ')'}\\\"></div>\\n      <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title\\\">\\n          <a routerLink=\\\"./questionnaire/{{ test.id }}\\\">{{ test.title }}</a>\\n        </h4>\\n        <p class=\\\"card-summary multiline\\\">\\n          <span>{{ test.summary }}</span>\\n        </p>\\n        <p class=\\\"card-text\\\">作者: {{ test.writer.name }}</p>\\n        <p class=\\\"card-text\\\">日期: {{ test.post_date }}</p>\\n        <p class=\\\"card-text\\\">觀看人數: {{ test.viewed }}</p>\\n        <p class=\\\"card-text\\\">收藏人數:</p>\\n        <div class=\\\"hashtag\\\">\\n        \\t<a href=\\\"\\\">#hashtag</a>\\n          <a href=\\\"\\\">#hashtag</a>\\n          <a href=\\\"\\\">#hashtag</a>\\n          <a href=\\\"\\\">#hashtag</a>\\n          <a href=\\\"\\\">#hashtag</a>\\n          <a href=\\\"\\\">#hashtag</a>\\n          <a href=\\\"\\\">#hashtag</a>\\n        </div>\\n        <div class=\\\"card-button\\\">\\n          <div class=\\\"icon-group-share justify-content-center\\\">\\n            <a href=\\\"\\\"><img src=\\\"/assets/img/icons/icon_line_test.svg\\\" alt=\\\"\\\"></a>\\n            <a href=\\\"\\\"><img src=\\\"/assets/img/icons/icon_fb_test.svg\\\" alt=\\\"\\\"></a>\\n          </div>\\n          <a routerLink=\\\"./questionnaire/{{ test.id }}\\\" class=\\\"btn btn-test-light\\\">開始測驗</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-psychology-list [psychology_param]=\\\"psychology_param\\\" *ngIf=\\\"readmoreCheck\\\"></app-psychology-list>\\n\\n<!-- 下滑看更多區域 -->\\n<div *ngIf=\\\"moredata\\\" class=\\\"btn-group-more\\\">\\n\\t<button (click)=\\\"more()\\\" class=\\\"btn btn-test-dark\\\">Load More</button>\\n</div>\\n\\n\"","module.exports = \".btn-group-more {\\n  display: none; }\\n\\n.row + .btn-group-more {\\n  display: block; }\\n\\n.row + div + .btn-group-more {\\n  display: block; }\\n\"","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport  * as Config from '../../models/config.model';\nimport { formatDate } from '@angular/common';\nimport {  Router, ActivatedRoute, ParamMap } from '@angular/router'; //接收route para\n\n@Component({\n\tselector: 'app-psychology-list',\n\ttemplateUrl: './psychology-list.component.html',\n\tstyleUrls: ['./psychology-list.component.scss']\n})\nexport class PsychologyListComponent implements OnInit {\n\n\t//input 顯示序號\n\t@Input() psychology_param;\n\n\n\t//如果input進來的參數改變, 重新取得心理測驗列表\n\tngOnChanges(changes: SimpleChanges) {\n\t\tconsole.log(changes);\n    \tthis.psychology_param = changes.psychology_param.currentValue;\n    \tthis.readmoreCheck = 0;\n    \tthis.getPsychologyList();\n\t}\n\n\t\n\tlist;\n\tfileUrl = Config.FileUrl;\n\t//是否開啟read more div\n\treadmoreCheck = 0;\n\t//一次要顯示幾筆\n\tlimit = 3;\n\tmoredata = 1;\n\n\tconstructor(private http:HttpService, private router:Router, private route:ActivatedRoute) { }\n\n\tngOnInit() {\n\t\tthis.readmoreCheck = 0;\n\t\tthis.getPsychologyList();\n\t}\n\n\n\t//看更多\n\tmore() {\n\t\tthis.readmoreCheck = 1;\n\t\tthis.psychology_param.from+=this.limit;\t\n\t}\n\n\n\t//取得心理測驗列表\n\tgetPsychologyList() {\n\t\tlet url:string;\n\n\t\tconst paramObject = {\n\t\t\t'website_id': 1,\n\t\t\t'category_id': this.psychology_param.category_id,\n\t\t\t'sort': this.psychology_param.sort,\n\t\t\t'sort_order': this.psychology_param.sort_order,\n\t\t\t'from': this.psychology_param.from,\n\t\t\t'limit':this.limit,\n\t\t};\n\t\t//console.log(paramObject);\n\n\t\tlet param = this.http.getParamFormat(paramObject);\n\t\turl = `${Config.APIUrl}/api/content/psychological-test?${param}`;\n\t\tthis.http.getHttp(url).subscribe(\n\t\t\tres => {\n\t\t\t\t//沒有資料 隱藏more data區塊\n\t\t\t\tif(res.tests.length==0){\n\t\t\t\t\tconsole.log(\"empty array\");\n\t\t\t\t\tthis.moredata = 0;\n\t\t\t\t}\n\n\t\t\t\tthis.list = res.tests;\n\t\t\t\tconsole.log(res);\n\t\t\t}\n\t\t);\n\n\t}\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  psychology-result works!\\n</p>\\n<div [innerHtml]=\\\"result\\\"></div>\\n{{ chart | json }}\\n\\n\\n\\n<!-- hashtag -->\\n<app-member-psychology-hashtag *ngIf=\\\"hashtags\\\" [input_test_ans_id]=\\\"ans_id\\\" [input_hashtags]=\\\"hashtags\\\"></app-member-psychology-hashtag>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router'; //接收route para\nimport  * as Config from '../../models/config.model';\nimport { HttpService } from '../../services/http.service';\n\n@Component({\n\tselector: 'app-psychology-result',\n\ttemplateUrl: './psychology-result.component.html',\n\tstyleUrls: ['./psychology-result.component.css']\n})\nexport class PsychologyResultComponent implements OnInit {\n\n\tchart;\n\tresult;\n\thashtags;\n\tans_id;\n\tconstructor(private route: ActivatedRoute, private http:HttpService) { }\n\n\tngOnInit() {\n\t\tthis.route.params.subscribe(params => {\n\t\t\tthis.ans_id = params['answer_id'];\n    \t\tthis.getChart(params['answer_id']);\n    \t\tthis.getResult(params['test_id']);\n    \t\tthis.getHashtag(params['answer_id']);\n    \t});\n\t}\n\n\n\t//取得結果說明\n\tgetResult(id){\n\t\tlet url:string;\n\n\t\turl = `${Config.APIUrl}/api/content/psychological-test/show?id=${id}&viewed=0`;\n\t\tthis.http.getHttp(url).subscribe(\n\t\t\tres => {\n\t\t\t\tthis.result = res.test.result_content;\n\t\t\t\tconsole.log(res);\n\t\t\t}\n\t\t);\n\t}\n\n\n\t//取得結果圖表data\n\tgetChart(id){\n\t\tlet url:string;\n\n\t\turl = `${Config.APIUrl}/api/member/psychological-test-answer/chart-data?id=${id}`;\n\t\tthis.http.getHttp(url).subscribe(\n\t\t\tres => {\n\n\t\t\t\tthis.chart = res;\n\t\t\t\tconsole.log(res);\n\n\t\t\t\t//加入心理測驗圖表function\n\t\t\t}\n\t\t);\n\t}\n\n\n\t//取得結果hashtag\n\tgetHashtag(id){\n\t\tlet url:string;\n\n\t\turl = `${Config.APIUrl}/api/member/psychological-test-answer/show?id=${id}`;\n\t\tthis.http.getHttp(url).subscribe(\n\t\t\tres => {\n\t\t\t\tthis.hashtags = res.hash_tags;\n\t\t\t\tconsole.log(res);\n\t\t\t}\n\t\t);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginGuard } from '../guards/login.guard';\nimport { CompleteInfoGuard } from '../guards/complete-info.guard';\n\n//component\nimport { PsychologyHomeComponent } from \"../psychology/psychology-home/psychology-home.component\";\nimport { QuestionnaireComponent } from '../psychology/questionnaire/questionnaire.component';\nimport { PsychologyResultComponent } from \"../psychology/psychology-result/psychology-result.component\";\n\n\nconst routes: Routes = [\n\n\t{ path: '', component: PsychologyHomeComponent, canActivate:[CompleteInfoGuard] },\n\t{ path: 'questionnaire/:id', component: QuestionnaireComponent, canActivate:[CompleteInfoGuard] },\n\t{ path: 'result/:test_id/:answer_id', component: PsychologyResultComponent, canActivate:[CompleteInfoGuard] },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PsychologyRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PsychologyRoutingModule } from './psychology-routing.module';\nimport { ShareModule } from '../share/share.module';\nimport { MemberModule } from '../member/member.module';\n\n//component\nimport { QuestionnaireComponent } from '../psychology/questionnaire/questionnaire.component';\nimport { PsychologyHomeComponent } from '../psychology/psychology-home/psychology-home.component';\nimport { PsychologyListComponent } from '../psychology/psychology-list/psychology-list.component';\nimport { PsychologyResultComponent } from '../psychology/psychology-result/psychology-result.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PsychologyRoutingModule,\n    ShareModule,\n    MemberModule,\n  ],\n  declarations: [\n  \tQuestionnaireComponent,\n\tPsychologyHomeComponent,\n\tPsychologyListComponent,\n\tPsychologyResultComponent\n  ]\n})\nexport class PsychologyModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  questionnaire works!\\n</p>\\n\\n<div *ngIf=\\\"data\\\">\\n\\t<!-- 測驗資訊 -->\\n\\t<div>\\n\\t\\t<ul>\\n\\t\\t\\t<li>標題 {{ data.title }}</li>\\n\\t\\t\\t<li>摘要 {{ data.summary }}</li>\\n\\t\\t\\t<li><img src=\\\"{{ fileUrl }}{{ data.image }}\\\" /></li>\\n\\t\\t\\t<li>瀏覽次數 {{ data.viewed }}</li>\\n\\t\\t\\t<li>填答次數 {{ data.join_count }}</li>\\n\\t\\t\\t<li>預計作答時間 {{ data.minute }}</li>\\n\\t\\t\\t<li>題數 {{ data.question_count }}</li>\\n\\t\\t\\t<li>日期 {{ data.post_date }}</li>\\n\\t\\t</ul>\\n\\t</div>\\n\\n\\t<!-- 測驗問題 -->\\n\\t<div>\\n\\t\\t<div>\\n\\t\\t\\t測驗說明:<br>\\n\\t\\t\\t{{ data.questionnaire.structure.qurestionnaire_info | json }}\\n\\t\\t</div>\\n\\t\\t<div>\\n\\t\\t\\t{{ data.questionnaire.structure.sec_Questions.title }}<br>\\n\\t\\t\\t{{ data.questionnaire.structure.sec_Questions.description }}\\n\\t\\t</div>\\n\\t\\t<!-- 問題 -->\\n\\t\\t<div>\\n\\t\\t\\t<form [formGroup]='Form' (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t<ul>\\n\\t\\t\\t\\t<li *ngFor=\\\"let question of data.questionnaire.structure.sec_Questions.questions\\\">\\n\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"question.type=='choice'\\\">\\n\\t\\t\\t\\t\\t\\t單選題\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t      \\t<label>{{ question.question }}</label><br>\\n\\t\\t\\t\\t      \\n\\t\\t\\t\\t\\t      \\t<span *ngFor=\\\"let choice of question.choices; let i = index\\\">\\n\\t\\t\\t\\t\\t        \\t<input type=\\\"radio\\\" formControlName=\\\"{{ question.id }}\\\" value=\\\"{{ choice.value }}\\\">{{ choice.displayText }}\\n\\t\\t\\t\\t\\t       \\t</span>\\n\\t\\t\\t\\t\\t       \\t<div *ngIf=\\\"submitted && Form.get(question.id).invalid\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t            <div>必填</div>\\n\\t\\t\\t\\t\\t        </div>\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t    \\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"question.type=='multi'\\\">\\n\\t\\t\\t\\t\\t\\t複選題\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" formArrayName=\\\"{{ question.id }}\\\">\\n\\t\\t\\t\\t      \\t<label>{{ question.question }}</label><br>\\n\\t\\t\\t\\t      \\n\\t\\t\\t\\t\\t      \\t<span *ngFor=\\\"let choice of question.choices; let i = index\\\">\\n\\t\\t\\t\\t\\t        \\t<input type=\\\"checkbox\\\" formControlName=\\\"{{ i }}\\\" value=\\\"{{ choice.value }}\\\" (change)=\\\"onCheckChange($event)\\\" id=\\\"{{ question.id }}#{{ i }}\\\">{{ choice.displayText }}\\n\\t\\t\\t\\t\\t       \\t</span>\\n\\t\\t\\t\\t\\t       \\t<div *ngIf=\\\"submitted && Form.get(question.id).invalid\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t            <div>必填</div>\\n\\t\\t\\t\\t\\t        </div>\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t    \\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\n\\t\\t\\t<button class=\\\"btn-primary\\\" type=\\\"submit\\\">送出測驗</button>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router'; //接收route para\nimport  * as Config from '../../models/config.model';\nimport { HttpService } from '../../services/http.service';\nimport { NgForm, FormGroup, FormControl, Validators, FormBuilder, FormArray  } from '@angular/forms';\nimport swal, { SweetAlertOptions } from 'sweetalert2';\nimport { CustomService } from '../../validator/custom.service';\nimport { LayoutService } from '../../services/layout.service';\n\n@Component({\n\tselector: 'app-questionnaire',\n\ttemplateUrl: './questionnaire.component.html',\n\tstyleUrls: ['./questionnaire.component.css']\n})\n\nexport class QuestionnaireComponent implements OnInit {\n\n\tdata;\n\tfileUrl = Config.FileUrl;\n\tcategory;\n\tpsychological_test_id = \"3\";\n\n\tsubmitted = false;\n\tForm = this.formBuilder.group({ });\n\n\tconstructor(private layoutService:LayoutService, private route: ActivatedRoute, private router: Router, private httpService:HttpService, private formBuilder: FormBuilder, private customValidators: CustomService) { }\n\n\tngOnInit() {\n\t\tthis.route.params.subscribe(params => {\n\t\t\tthis.psychological_test_id = params['id'];\n\t\t\tthis.getInboundAPI();\n    \t});\n\t\t\n\t}\n\n\n\t//使用英邦德單一問卷資料API\n\tgetInboundAPI() {\n\t\tconst paramObject = {\n\t\t\t'id': this.psychological_test_id,\n\t\t\t'viewed': 0,\n\t\t};\n\t\t//console.log(paramObject);\n\t\tlet param = this.httpService.getParamFormat(paramObject);\n\t\tlet url = `${Config.APIUrl}/api/content/psychological-test/show?${param}`;\n\n\t\tthis.httpService.getHttp(url)\n\t\t\t.subscribe(\n\t\t\t\tres=> {\n\t\t\t\t\t//metadata\n\t\t\t\t\tthis.layoutService.setMetaData(res.test.metadata);\n\n\t\t\t\t\tthis.data = res.test;\n\t\t\t\t\t//console.log(res);\n\t\t\t\t\tlet questions = this.data.questionnaire.structure.sec_Questions.questions;\n\t\t\t\t\tObject.keys(questions)\n\t\t\t\t\t\t.map(key=> {\n\t\t\t\t\t\t\t//console.log(questions[key]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//單選 \n\t\t\t\t\t\t\tif(questions[key].type==\"choice\"){\n\t\t\t\t\t\t\t\tthis.Form.addControl(questions[key].id, new FormControl('', Validators.required));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//複選\n\t\t\t\t\t\t\tif(questions[key].type==\"multi\"){\n\t\t\t\t\t\t\t\tthis.Form.addControl(questions[key].id, new FormArray([], this.customValidators.checkboxRequired));\n\n\t\t\t\t\t\t\t\tObject.keys(questions[key].choices)\n\t\t\t\t\t\t\t\t\t.map(choice_key => {\n\t\t\t\t\t\t\t\t\t\tlet control = <FormArray>this.Form.controls[questions[key].id];\n\t\t\t\t\t\t\t\t\t\tcontrol.push(new FormControl(false));\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}//複選end\n\t\t\t\t\t\t});\n\t\t\t\t} \n\t\t\t);\n\t}\n\n\n\t//設定checkbox的值 從原本的true 改成value\n\tonCheckChange(event) {\n\t\tlet eventId = event.target.id;\n\t\tlet targetIds = eventId.split(\"#\");\n\t  \tconst formArray: FormArray = this.Form.get(targetIds[0]) as FormArray;\n\n\t\t/* Selected */\n\t\tif(event.target.checked){\n\t\t   // Add a new control in the arrayForm\n\t\t\t//console.log(formArray.controls[targetIds[1]]);\n\t\t   \t//console.log(targetIds[1]);\n\t\t   \tformArray.controls[targetIds[1]].setValue(event.target.value);\n\t\t}\n\t}\n\n\n\t//表單送出\n\tonSubmit(){\n\t\tconsole.log(this.Form.value);\n\t\t\n\t\t//判斷是否已按了送出 按了就要顯示驗證訊息\n\t\tthis.submitted = true;\n\n\t\t//表單沒有驗證成功 沒有動作\n\t\tif(this.Form.invalid){\n\t\t\treturn;\n\t\t}\n\n\t\tlet params:FormData = new FormData();\n  \t\tparams.append('psychological_test_id', this.psychological_test_id);\n  \t\tlet jsonStr = JSON.stringify(this.Form.value);\n  \t\tparams.append('questions', jsonStr);\n\n\t\tconsole.log(jsonStr);\n  \t\tconsole.log(params.getAll('questions'));\n\n  \t\tconst url = `${Config.APIUrl}/api/member/psychological-test-answer`;\n\n\t  \tthis.httpService.postHttp(url,params)\n\t\t    .subscribe(res => {\n\t\t    \tconsole.log(res);\n\t\t\t    swal({\n\t\t\t\t\ttitle: '成功!',\n\t\t\t\t\ttext: '心理測驗填寫完成',\n\t\t\t\t\ttype: 'success',\n\t\t\t\t}).then(\n\t\t\t\t\t(success)=> {\n\t\t\t    \tthis.router.navigate(['../../result', this.psychological_test_id, res.answer_id], { relativeTo: this.route });\n\t\t\t\t});\n\t\t\t\t\n\t\t    });\n\t}\n\t\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormArray, FormGroup, ValidationErrors } from '@angular/forms';\nimport { NG_VALIDATORS, Validator,  ValidatorFn, FormControl, AbstractControl } from '@angular/forms';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CustomService {\n\n\tconstructor() { }\n\n\tcheckboxRequired(formArray: FormArray) {\n        let trueCount = 0;\n        for (let i = 0; i < formArray.length; ++i) {\n            if (formArray.controls[i].value != false) {\n                trueCount++;\n            }\n        }\n        if (trueCount < 1) {\n            return {ckbValidate: true};\n        } else {\n            return null;\n        }\n    }\n\n    \n}\n"],"sourceRoot":""}